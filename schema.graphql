### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Structure for data response to repositories mock service"""
type DataRepositoriesMockServiceResponse {
  id: ID
  state: ID
}

type Mutation {
  """ðŸ”– Create a new organization in db"""
  createOrganization(organization: OrganizationDataIn): SingleResponse!

  """ðŸ”– Update the organization in db"""
  removeOrganization(
    """Unique organization id"""
    organization_id: Int
  ): SingleResponse!

  """ðŸ”– Update the organization in db"""
  updateOrganization(
    organization: OrganizationDataIn

    """Unique organization id"""
    organization_id: Int
  ): SingleResponse!
}

input OrganizationDataIn {
  name: String
  status: Int
}

"""The organization list service response structure"""
type OrganizationListResponse {
  data: [OrganizationResponse]

  """ResponseCode"""
  responseCode: ResponseCode
  total_records: Int
}

"""Structure for data response to organization"""
type OrganizationResponse {
  id_organization: ID
  name: String
  status: Int
}

type Query {
  """ðŸ”– Get Repositories Mock, get mock data of repositories"""
  getOrganizationsList(
    """ðŸ“Œ Limit of list"""
    limit: Int

    """ðŸ“Œ Skip page"""
    skip: Int
  ): OrganizationListResponse!

  """ðŸ”– Get Repositories Mock, get mock data of repositories"""
  getRepositoriesMock: RepositoriesMockServiceResponse!

  """ðŸ”– Heat Check, to verify available service"""
  healthCheck: SingleResponse!
}

"""The repositories mocks service response structure"""
type RepositoriesMockServiceResponse {
  repositories: [DataRepositoriesMockServiceResponse]

  """ResponseCode"""
  responseCode: ResponseCode
}

"""Description AuthInput"""
type ResponseCode {
  code: String!
  description: String!
  level: String!
  message: String!
}

"""The single response structure"""
type SingleResponse {
  """ResponseCode"""
  responseCode: ResponseCode
}