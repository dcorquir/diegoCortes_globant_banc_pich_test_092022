/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  OrganizationDataIn: { // input type
    name?: string | null; // String
    status?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  CsvMetricsByTribeListResponse: { // root type
    data?: string | null; // String
    responseCode?: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
  DataRepositoriesMockServiceResponse: { // root type
    id?: string | null; // ID
    state?: string | null; // ID
  }
  MetricsByTribeListResponse: { // root type
    data?: Array<NexusGenRootTypes['MetricsByTribeResponse'] | null> | null; // [MetricsByTribeResponse]
    responseCode?: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
    total_records?: number | null; // Int
  }
  MetricsByTribeResponse: { // root type
    bugs?: string | null; // String
    codeSmells?: string | null; // String
    coverage?: string | null; // String
    hotspots?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    organization?: string | null; // String
    state?: string | null; // String
    verificationState?: string | null; // String
    vulnerabilities?: string | null; // String
  }
  Mutation: {};
  OrganizationListResponse: { // root type
    data?: Array<NexusGenRootTypes['OrganizationResponse'] | null> | null; // [OrganizationResponse]
    responseCode?: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
    total_records?: number | null; // Int
  }
  OrganizationResponse: { // root type
    id_organization?: number | null; // Int
    name?: string | null; // String
    status?: number | null; // Int
  }
  Query: {};
  RepositoriesMockServiceResponse: { // root type
    repositories?: Array<NexusGenRootTypes['DataRepositoriesMockServiceResponse'] | null> | null; // [DataRepositoriesMockServiceResponse]
    responseCode?: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
  ResponseCode: { // root type
    code: string; // String!
    description: string; // String!
    level: string; // String!
    message: string; // String!
  }
  SingleResponse: { // root type
    responseCode?: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  CsvMetricsByTribeListResponse: { // field return type
    data: string | null; // String
    responseCode: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
  DataRepositoriesMockServiceResponse: { // field return type
    id: string | null; // ID
    state: string | null; // ID
  }
  MetricsByTribeListResponse: { // field return type
    data: Array<NexusGenRootTypes['MetricsByTribeResponse'] | null> | null; // [MetricsByTribeResponse]
    responseCode: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
    total_records: number | null; // Int
  }
  MetricsByTribeResponse: { // field return type
    bugs: string | null; // String
    codeSmells: string | null; // String
    coverage: string | null; // String
    hotspots: string | null; // String
    id: string | null; // ID
    name: string | null; // String
    organization: string | null; // String
    state: string | null; // String
    verificationState: string | null; // String
    vulnerabilities: string | null; // String
  }
  Mutation: { // field return type
    createOrganization: NexusGenRootTypes['SingleResponse']; // SingleResponse!
    removeOrganization: NexusGenRootTypes['SingleResponse']; // SingleResponse!
    updateOrganization: NexusGenRootTypes['SingleResponse']; // SingleResponse!
  }
  OrganizationListResponse: { // field return type
    data: Array<NexusGenRootTypes['OrganizationResponse'] | null> | null; // [OrganizationResponse]
    responseCode: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
    total_records: number | null; // Int
  }
  OrganizationResponse: { // field return type
    id_organization: number | null; // Int
    name: string | null; // String
    status: number | null; // Int
  }
  Query: { // field return type
    getCsvMetricsByTribeId: NexusGenRootTypes['CsvMetricsByTribeListResponse']; // CsvMetricsByTribeListResponse!
    getMetricsByTribeId: NexusGenRootTypes['MetricsByTribeListResponse']; // MetricsByTribeListResponse!
    getOrganizationsList: NexusGenRootTypes['OrganizationListResponse']; // OrganizationListResponse!
    getRepositoriesMock: NexusGenRootTypes['RepositoriesMockServiceResponse']; // RepositoriesMockServiceResponse!
    healthCheck: NexusGenRootTypes['SingleResponse']; // SingleResponse!
  }
  RepositoriesMockServiceResponse: { // field return type
    repositories: Array<NexusGenRootTypes['DataRepositoriesMockServiceResponse'] | null> | null; // [DataRepositoriesMockServiceResponse]
    responseCode: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
  ResponseCode: { // field return type
    code: string; // String!
    description: string; // String!
    level: string; // String!
    message: string; // String!
  }
  SingleResponse: { // field return type
    responseCode: NexusGenRootTypes['ResponseCode'] | null; // ResponseCode
  }
}

export interface NexusGenFieldTypeNames {
  CsvMetricsByTribeListResponse: { // field return type name
    data: 'String'
    responseCode: 'ResponseCode'
  }
  DataRepositoriesMockServiceResponse: { // field return type name
    id: 'ID'
    state: 'ID'
  }
  MetricsByTribeListResponse: { // field return type name
    data: 'MetricsByTribeResponse'
    responseCode: 'ResponseCode'
    total_records: 'Int'
  }
  MetricsByTribeResponse: { // field return type name
    bugs: 'String'
    codeSmells: 'String'
    coverage: 'String'
    hotspots: 'String'
    id: 'ID'
    name: 'String'
    organization: 'String'
    state: 'String'
    verificationState: 'String'
    vulnerabilities: 'String'
  }
  Mutation: { // field return type name
    createOrganization: 'SingleResponse'
    removeOrganization: 'SingleResponse'
    updateOrganization: 'SingleResponse'
  }
  OrganizationListResponse: { // field return type name
    data: 'OrganizationResponse'
    responseCode: 'ResponseCode'
    total_records: 'Int'
  }
  OrganizationResponse: { // field return type name
    id_organization: 'Int'
    name: 'String'
    status: 'Int'
  }
  Query: { // field return type name
    getCsvMetricsByTribeId: 'CsvMetricsByTribeListResponse'
    getMetricsByTribeId: 'MetricsByTribeListResponse'
    getOrganizationsList: 'OrganizationListResponse'
    getRepositoriesMock: 'RepositoriesMockServiceResponse'
    healthCheck: 'SingleResponse'
  }
  RepositoriesMockServiceResponse: { // field return type name
    repositories: 'DataRepositoriesMockServiceResponse'
    responseCode: 'ResponseCode'
  }
  ResponseCode: { // field return type name
    code: 'String'
    description: 'String'
    level: 'String'
    message: 'String'
  }
  SingleResponse: { // field return type name
    responseCode: 'ResponseCode'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOrganization: { // args
      organization?: NexusGenInputs['OrganizationDataIn'] | null; // OrganizationDataIn
    }
    removeOrganization: { // args
      organization_id?: number | null; // Int
    }
    updateOrganization: { // args
      organization?: NexusGenInputs['OrganizationDataIn'] | null; // OrganizationDataIn
      organization_id?: number | null; // Int
    }
  }
  Query: {
    getCsvMetricsByTribeId: { // args
      tribe_id?: number | null; // Int
    }
    getMetricsByTribeId: { // args
      tribe_id?: number | null; // Int
    }
    getOrganizationsList: { // args
      limit?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}