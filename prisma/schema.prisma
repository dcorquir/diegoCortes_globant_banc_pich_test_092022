generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model metrics {
  id_repository   BigInt     @id(map: "metrics_pk")
  coverage        Float
  bugs            BigInt
  vulnerabilities BigInt
  hotspot         BigInt
  code_smells     BigInt
  repository      repository @relation(fields: [id_repository], references: [id_repository], onDelete: NoAction, onUpdate: NoAction, map: "metrics_repository_fk")
}

model organization {
  id_organization BigInt   @id(map: "organization_pk") @default(sequence())
  name            String   @db.Char(50)
  status          BigInt
  deleted         Boolean? @default(false)
  tribe           tribe[]
}

model repository {
  id_repository BigInt   @id(map: "repository_pk") @default(sequence())
  id_tribe      BigInt
  name          String   @db.Char(50)
  state         String   @db.Char(1)
  create_time   DateTime @default(now()) @db.Timestamptz(6)
  status        String?  @db.Char(1)
  tribe         tribe    @relation(fields: [id_tribe], references: [id_tribe], onDelete: NoAction, onUpdate: NoAction, map: "repository_tribe_fk")
  metrics       metrics?
}

model tribe {
  id_tribe        BigInt       @id(map: "tribe_pk") @default(sequence())
  id_organization BigInt
  name            String       @db.Char(50)
  status          BigInt
  organization    organization @relation(fields: [id_organization], references: [id_organization], onDelete: NoAction, onUpdate: NoAction, map: "tribe_organization_fk")
  repository      repository[]
}
